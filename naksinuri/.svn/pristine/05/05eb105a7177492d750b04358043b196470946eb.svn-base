<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<sqlMap namespace="SealifeDatabase">

	<typeAlias  alias="egovMap" type="egovframework.rte.psl.dataaccess.util.EgovMap"/>
	<typeAlias  alias="eduCertificateVO" type="egovframework.eduadm.certificate.service.EduCertificateVO"/>
	
	<!-- 이수증 : 일괄 출력용(프린트)
	<select id="get_edu_certificate_print_list" parameterClass="eduCertificateVO" resultClass="eduCertificateVO">
			SELECT 
				IFNULL(
				(SELECT 
				COUNT(T2.CRTF_DTL_SN) 
				FROM EDU_CRTF_DTL_TB AS T2 
				WHERE T2.CRTF_SN = T.CRTF_SN
				AND T2.USE_ST = '1'
				AND T2.DEL_ST = '0'
				),0
				) AS CRTF_DTL_CNT,
			T.*,M.MBR_NM,M.MBR_HP,M.MBR_EMAIL,
			T2.TMP_MBR_NM,T2.TMP_MBR_BIRTH,T2.TMP_MBR_HP,
			CRS1.CRS_NM,CRS1.CRS_TYPE					 
			FROM EDU_CRTF_TB AS T 
			LEFT JOIN MBR_TB AS M ON M.MBR_ID = T.MBR_ID
			LEFT JOIN EDU_CURRICULUM_TB AS CRS1 ON CRS1.CRS_SN = T.CRS_SN
			LEFT JOIN EDU_MBR_HSTRY_TB AS T2 ON T2.HMBR_SN = T.HMBR_SN
		  	WHERE 1 = 1 
		  	<isNotEmpty property="CRTF_SNs" prepend="AND">
				 T.CRTF_SN 
				<iterate prepend="IN" property="CRTF_SNs" open="(" close=")" conjunction=",">
					#CRTF_SNs[]#
				</iterate>
			</isNotEmpty>				
			<isEmpty property="CRS_SNs" prepend="AND">
				T.CRS_SN
				<iterate prepend="IN" property="CRS_SNs" open="(" close=")" conjunction=",">
					#CRS_SNs[]#
				</iterate>
			</isEmpty>
			<isEmpty property="HMBR_SNs" prepend="AND">
				T.HMBR_SN
				<iterate prepend="IN" property="HMBR_SNs" open="(" close=")" conjunction=",">
					#HMBR_SNs[]#
				</iterate>
			</isEmpty>
			<isEmpty property="MBR_IDs" prepend="AND">
				T.MBR_ID
				<iterate prepend="IN" property="MBR_IDs" open="(" close=")" conjunction=",">
					#MBR_IDs[]#
				</iterate>
			</isEmpty>					
	</select>	
	 -->
	<!-- //이수증 : 일괄 출력용(프린트) -->
	<!-- 이수증 : 보고서 다운로드 용 -->
	<select id="get_edu_certificate_excel_list" parameterClass="eduCertificateVO" resultClass="eduCertificateVO">
			SELECT @rownum:=@rownum+1 AS ROW_NUM,P.* 
			FROM (
				SELECT 	T.CRTF_CD,date_format(T.REG_DT,'%Y-%m-%d %H:%i:%s') AS REG_DT,date_format(T.UPD_DT,'%Y-%m-%d %H:%i:%s') AS UPD_DT,
						T.USE_ST,T.MBR_ID,
						M.MBR_NM,M.MBR_HP,M.MBR_BIRTH, M.MBR_SIDO_CD, M.MBR_SIGNGU_CD,
						CRS1.CRS_NM,CRS1.CRS_TYPE,CRS1.CRS_GRP_CD,CRS1.CAT_INS_SN,date_format(CRS1.CRS_STR_DT,'%Y-%m-%d') AS CRS_STR_DT,CRS1.CRS_MBR_CD
				FROM EDU_CRTF_TB AS T 
				LEFT JOIN MBR_TB AS M ON M.MBR_ID = T.MBR_ID 
				LEFT JOIN EDU_CURRICULUM_TB AS CRS1 ON CRS1.CRS_SN = T.CRS_SN 
			) AS P ,(SELECT @ROWNUM := 0) R
			WHERE 1=1
			<isNotEmpty property="MBR_SIDO_CD" prepend="AND">
				P.MBR_SIDO_CD = #MBR_SIDO_CD#	
		  	</isNotEmpty>
			<isNotEmpty property="MBR_SIGNGU_CD" prepend="AND">
				P.MBR_SIGNGU_CD = #MBR_SIGNGU_CD#	
		  	</isNotEmpty>
			<isNotEmpty property="searchStrDate" prepend="AND">
				<![CDATA[ 
				P.REG_DT >= #searchStrDate#	
				]]>
		  	</isNotEmpty>
			<isNotEmpty property="searchEndDate" prepend="AND">
				<![CDATA[ 
				P.REG_DT <= #searchEndDate#	
				]]>
		  	</isNotEmpty>
			<isNotEmpty property="CRS_MBR_CD" prepend="AND">
				P.CRS_MBR_CD = #CRS_MBR_CD#	
		  	</isNotEmpty>
			<isNotEmpty property="CRS_GRP_CD" prepend="AND">
				P.CRS_GRP_CD = #CRS_GRP_CD#	
		  	</isNotEmpty>
		  	<isNotEmpty property="searchYear" prepend="AND">
				<![CDATA[ 
				DATE_FORMAT(P.CRS_STR_DT, '%Y') = #searchYear#
				]]>
			</isNotEmpty>			
			<isNotEqual property="isNotUsedPagination" compareValue="true">  
				LIMIT #recordCountPerPage# OFFSET #firstIndex#
			</isNotEqual>						
	</select>	
	<!-- //이수증 : 보고서 다운로드 용 -->
	<!-- 인증서조회 : 교육센터-귀어귀촌-인증서발급내역 -->
	<select id="get_edu_certificate_list_totcnt" parameterClass="eduCertificateVO" resultClass="int">
			SELECT COUNT(T.CRTF_SN)
			FROM EDU_CRTF_TB AS T 
			LEFT JOIN MBR_TB AS M ON M.MBR_ID = T.MBR_ID
			<isNotEmpty property="searchUseYn">
				<isEqual compareValue="Y" property="searchUseYn">
					<isEqual compareValue="mbr" property="searchCondition">
						<isNotEmpty property="searchKeyword" prepend="AND">
						( M.MBR_NM LIKE '%$searchKeyword$' OR M.MBR_NM LIKE '%$searchKeyword$%' OR M.MBR_HP LIKE '$searchKeyword$%' OR M.MBR_ID LIKE '%$searchKeyword$%' )
						</isNotEmpty>
					</isEqual>
				</isEqual>			
		  	</isNotEmpty>
		  	LEFT JOIN EDU_CURRICULUM_TB AS CRS1 ON CRS1.CRS_SN = T.CRS_SN
		  	<isNotEmpty property="searchUseYn">
				<isEqual compareValue="Y" property="searchUseYn">
					<isEqual compareValue="crs" property="searchCondition">
						<isNotEmpty property="searchKeyword" prepend="AND">
						( CRS1.CRS_NM LIKE '%$searchKeyword$' OR CRS1.CRS_NM LIKE '%$searchKeyword$%' )
						</isNotEmpty>
					</isEqual>
				</isEqual>			
		  	</isNotEmpty>
		  	LEFT JOIN EDU_MBR_HSTRY_TB AS T2 ON T2.HMBR_SN = T.HMBR_SN
			WHERE 1 = 1 
			<isNotEmpty property="searchUseYn">
				<isEqual compareValue="Y" property="searchUseYn">
					<isEqual compareValue="nonmbr" property="searchCondition">
						AND CRS1.CRS_NM IS NOT NULL
						<isNotEmpty property="searchKeyword" prepend="AND">
						( T2.TMP_MBR_NM LIKE '%$searchKeyword$' OR T2.TMP_MBR_NM LIKE '%$searchKeyword$%' OR T2.TMP_MBR_HP LIKE '$searchKeyword$%' OR T2.TMP_MBR_BIRTH = '$searchKeyword$' )
						</isNotEmpty>
						ORDER BY T2.TMP_MBR_NM ASC
					</isEqual>
					<isNotEqual compareValue="nonmbr" property="searchCondition">
						<isEqual compareValue="mbr" property="searchCondition">
							AND M.MBR_NM IS NOT NULL
						</isEqual>
						AND CRS1.CRS_NM IS NOT NULL
						ORDER BY M.MBR_NM ASC	
					</isNotEqual>
				</isEqual>			
		  	</isNotEmpty>
	</select>
	<select id="get_edu_certificate_list" parameterClass="eduCertificateVO" resultClass="eduCertificateVO">
			SELECT 
				IFNULL(
				(SELECT 
				COUNT(T2.CRTF_DTL_SN) 
				FROM EDU_CRTF_DTL_TB AS T2 
				WHERE T2.CRTF_SN = T.CRTF_SN
				<isEmpty property="USE_ST">
					AND T2.USE_ST = '1'
					AND T2.DEL_ST = '0'
				</isEmpty>
				),0
				) AS CRTF_DTL_CNT,
			T.*,M.MBR_NM,M.MBR_NCNM,M.MBR_HP,M.MBR_EMAIL,M.MBR_BIRTH,
			CRS1.CRS_NM,CRS1.CRS_TYPE,CRS1.CRS_GRP_CD,CRS1.CAT_INS_SN, 
			T2.TMP_MBR_NM,T2.TMP_MBR_BIRTH,T2.TMP_MBR_HP,
			DATE_FORMAT(CRS1.CRS_STR_DT, '%Y') AS CRS_STR_DT_YEAR
			FROM EDU_CRTF_TB AS T 
			LEFT JOIN MBR_TB AS M ON M.MBR_ID = T.MBR_ID
			<isNotEmpty property="searchUseYn">
				<isEqual compareValue="Y" property="searchUseYn">
					<isEqual compareValue="mbr" property="searchCondition">
						<isNotEmpty property="searchKeyword" prepend="AND">
						( M.MBR_NM LIKE '%$searchKeyword$' OR M.MBR_NM LIKE '%$searchKeyword$%' OR M.MBR_HP LIKE '$searchKeyword$%' OR M.MBR_ID LIKE '%$searchKeyword$%' )
						</isNotEmpty>
					</isEqual>
				</isEqual>			
		  	</isNotEmpty>
		  	LEFT JOIN EDU_CURRICULUM_TB AS CRS1 ON CRS1.CRS_SN = T.CRS_SN
		  	<isNotEmpty property="searchUseYn">
				<isEqual compareValue="Y" property="searchUseYn">
					<isEqual compareValue="crs" property="searchCondition">
						<isNotEmpty property="searchKeyword" prepend="AND">
						( CRS1.CRS_NM LIKE '%$searchKeyword$' OR CRS1.CRS_NM LIKE '%$searchKeyword$%' )
						</isNotEmpty>
					</isEqual>
				</isEqual>			
		  	</isNotEmpty>
		  	LEFT JOIN EDU_MBR_HSTRY_TB AS T2 ON T2.HMBR_SN = T.HMBR_SN
		  	WHERE 1 = 1 
		  	<isNotEmpty property="searchUseYn">
				<isEqual compareValue="Y" property="searchUseYn">
					<isEqual compareValue="nonmbr" property="searchCondition">
						AND CRS1.CRS_NM IS NOT NULL
						<isNotEmpty property="searchKeyword" prepend="AND">
						( T2.TMP_MBR_NM LIKE '%$searchKeyword$' OR T2.TMP_MBR_NM LIKE '%$searchKeyword$%' OR T2.TMP_MBR_HP LIKE '$searchKeyword$%' OR T2.TMP_MBR_BIRTH = '$searchKeyword$' )
						</isNotEmpty>
						/* ORDER BY T2.TMP_MBR_NM ASC */
				  		ORDER BY T.REG_DT DESC
					</isEqual>
					<isNotEqual compareValue="nonmbr" property="searchCondition">
						<isEqual compareValue="mbr" property="searchCondition">
							AND M.MBR_NM IS NOT NULL
						</isEqual>
						AND CRS1.CRS_NM IS NOT NULL
						/*
							AND isnull(CRS1.CRS_TYPE)
			  				AND CRS1.CRS_TYPE = 'fshsk_trnng'
						*/
				  		/*ORDER BY M.MBR_NM ASC*/
				  		ORDER BY T.REG_DT DESC
					</isNotEqual>
				</isEqual>			
		  	</isNotEmpty>	
		  	<isEmpty property="searchUseYn">
		  		AND CRS1.CRS_NM IS NOT NULL
		  		/*ORDER BY M.MBR_NM ASC*/
		  		ORDER BY T.REG_DT DESC
		  	</isEmpty>
			<isNotEqual property="isNotUsedPagination" compareValue="true">  
				LIMIT #recordCountPerPage# OFFSET #firstIndex#
			</isNotEqual>						
	</select>
	<select id="get_edu_certificate_dtl_list_totcnt" parameterClass="eduCertificateVO" resultClass="int">
			SELECT COUNT(T.CRTF_DTL_SN) 
			FROM EDU_CRTF_DTL_TB AS T
			WHERE 1 = 1 
			<isEmpty property="USE_ST">
				AND T.USE_ST = '1'
				AND T.DEL_ST = '0'
			</isEmpty>
			<isNotEmpty property="CRTF_SN">
				AND T.CRTF_SN = #CRTF_SN#
			</isNotEmpty>
			<isNotEmpty property="MBR_ID">
				AND T.MBR_ID = #MBR_ID#
			</isNotEmpty>
			ORDER BY T.REG_DT DESC	
	</select>
	<select id="get_edu_certificate_dtl_list" parameterClass="eduCertificateVO" resultClass="eduCertificateVO">
			SELECT T.*,M.MBR_NM
			FROM EDU_CRTF_DTL_TB AS T 
			LEFT JOIN MBR_TB AS M ON M.MBR_ID = T.REG_MBR_ID
			WHERE 1 = 1 
			<isEmpty property="USE_ST">
				AND T.USE_ST = '1'
				AND T.DEL_ST = '0'
			</isEmpty>
			<isNotEmpty property="CRTF_SN">
				AND T.CRTF_SN = #CRTF_SN#
			</isNotEmpty>
			<isNotEmpty property="MBR_ID">
				AND T.MBR_ID = #MBR_ID#
			</isNotEmpty>
			ORDER BY T.REG_DT DESC	
			<isNotEqual property="isNotUsedPagination" compareValue="true">  
				LIMIT #recordCountPerPage# OFFSET #firstIndex#
			</isNotEqual>						
	</select>	
	<select id="get_edu_certificate_info" parameterClass="eduCertificateVO" resultClass="eduCertificateVO">
			SELECT 
				IFNULL(
				(SELECT 
				COUNT(T2.CRTF_DTL_SN) 
				FROM EDU_CRTF_DTL_TB AS T2 
				WHERE T2.CRTF_SN = T.CRTF_SN
				AND T2.USE_ST = '1'
				AND T2.DEL_ST = '0'
				),0
				) AS CRTF_DTL_CNT,
			T.*,M.MBR_NM,M.MBR_HP,M.MBR_EMAIL,
			T2.TMP_MBR_NM,T2.TMP_MBR_BIRTH,T2.TMP_MBR_HP,
			CRS1.CRS_NM,CRS1.CRS_TYPE					 
			FROM EDU_CRTF_TB AS T 
			LEFT JOIN MBR_TB AS M ON M.MBR_ID = T.MBR_ID
			LEFT JOIN EDU_CURRICULUM_TB AS CRS1 ON CRS1.CRS_SN = T.CRS_SN
			LEFT JOIN EDU_MBR_HSTRY_TB AS T2 ON T2.HMBR_SN = T.HMBR_SN
		  	WHERE 1 = 1 
		  	<isNotEmpty property="CRTF_SN">
				AND T.CRTF_SN = #CRTF_SN#
				<isNotEmpty property="MBR_ID">
					AND T.MBR_ID = #MBR_ID#
				</isNotEmpty>
			</isNotEmpty>				
			<isEmpty property="CRTF_SN">
				AND T.CRS_SN = #CRS_SN#
				AND T.HMBR_SN = #HMBR_SN#
				<isNotEmpty property="MBR_ID">
					AND T.MBR_ID = #MBR_ID#
				</isNotEmpty>
				<isEmpty property="MBR_ID">
					AND ( T.MBR_ID IS NULL OR T.MBR_ID = '' )
				</isEmpty>
			</isEmpty>							
	</select>	
	<select id="get_edu_certificate_info_dtl" parameterClass="eduCertificateVO" resultClass="eduCertificateVO">
			SELECT T.*,M.MBR_NM,M.MBR_HP,M.MBR_EMAIL,
			CRS1.CRS_NM,CRS1.CRS_TYPE					 
			FROM EDU_CRTF_DTL_TB AS T 
			LEFT JOIN MBR_TB AS M ON M.MBR_ID = T.MBR_ID
			LEFT JOIN EDU_CURRICULUM_TB AS CRS1 ON CRS1.CRS_SN = T.CRS_SN
		  	WHERE 1 = 1 AND T.CRTF_DTL_SN = #CRTF_DTL_SN# 
		  	<isNotEmpty property="CRTF_SN">
				AND T.CRTF_SN = #CRTF_SN#
			</isNotEmpty>				
			<isNotEmpty property="MBR_ID">
				AND T.MBR_ID = #MBR_ID#
			</isNotEmpty>	
	</select>
	<update id="set_edu_certificate_mod" parameterClass="eduCertificateVO">
		UPDATE EDU_CRTF_TB 
		SET 
			<isNotEmpty property="CRTF_HTML_DATA">		    	
				CRTF_HTML_DATA = #CRTF_HTML_DATA#,
			</isNotEmpty>
			<isNotEmpty property="USE_ST">		    	
				USE_ST = #USE_ST#,
			</isNotEmpty>
			<isNotEmpty property="DEL_ST">		    	
				DEL_ST = #DEL_ST#,
			</isNotEmpty>
			UPD_MBR_ID=#UPD_MBR_ID#,
			UPD_DT=NOW() 
		WHERE 1=1 
			AND CRTF_SN = #CRTF_SN# 
			AND MBR_ID = #MBR_ID#
	</update>	
	<update id="set_edu_certificate_mod_dtl" parameterClass="eduCertificateVO">
		UPDATE EDU_CRTF_DTL_TB 
		SET 
			<isNotEmpty property="USE_ST">		    	
				USE_ST = #USE_ST#,
			</isNotEmpty>
			<isNotEmpty property="DEL_ST">		    	
				DEL_ST = #DEL_ST#,
			</isNotEmpty>
			UPD_MBR_ID=#UPD_MBR_ID#,
			UPD_DT=NOW() 
		WHERE 1=1 
			AND CRTF_SN = #CRTF_DTL_SN# 
			AND CRTF_SN = #CRTF_SN# 
			AND MBR_ID = #MBR_ID#
	</update>	
	<update id="del_edu_certificate" parameterClass="eduCertificateVO">
		UPDATE EDU_CRTF_TB 
		SET USE_ST=0,
			DEL_ST=1,
			UPD_MBR_ID=#UPD_MBR_ID#,
			UPD_DT=NOW() 
		WHERE 1=1 
			<isNotEmpty property="CRTF_SN">		    	
				AND CRTF_SN = #CRTF_SN#
			</isNotEmpty>			
			<isNotEmpty property="MBR_ID">		    	
				AND MBR_ID = #MBR_ID#
			</isNotEmpty>
	</update>
	<update id="del_edu_certificate_dtl" parameterClass="eduCertificateVO">
		UPDATE EDU_CRTF_DTL_TB 
		SET USE_ST=0,
			DEL_ST=1,
			UPD_MBR_ID=#UPD_MBR_ID#,
			UPD_DT=NOW() 
		WHERE 1=1 
			<isNotEmpty property="CRTF_DTL_SN">		    	
				AND CRTF_DTL_SN = #CRTF_DTL_SN#
			</isNotEmpty>
			<isNotEmpty property="CRTF_SN">		    	
				AND CRTF_SN = #CRTF_SN#
			</isNotEmpty>			
			<isNotEmpty property="MBR_ID">		    	
				AND MBR_ID = #MBR_ID#
			</isNotEmpty>
	</update>
	<delete id="remove_edu_certificate" parameterClass="eduCertificateVO">
		<isNotEmpty property="CRTF_SN">	
			DELETE 
			FROM EDU_CRTF_TB
			WHERE 1=1 AND CRTF_SN = #CRTF_SN#
			<isNotEmpty property="MBR_ID">		    	
				AND MBR_ID = #MBR_ID#
			</isNotEmpty>
		</isNotEmpty>
	</delete>	
	<delete id="remove_edu_certificate_dtl" parameterClass="eduCertificateVO">
		DELETE 
		FROM EDU_CRTF_DTL_TB
		WHERE 1=1  
		<isNotEmpty property="CRTF_DTL_SN">		    	
			AND CRTF_DTL_SN = #CRTF_DTL_SN#
		</isNotEmpty>
		<isNotEmpty property="CRTF_SN">		    	
			AND CRTF_SN = #CRTF_SN#
		</isNotEmpty>
		<isNotEmpty property="MBR_ID">		    	
			AND MBR_ID = #MBR_ID#
		</isNotEmpty>
	</delete>	
	<update id="set_edu_certificate_mod_use_unlock" parameterClass="eduCertificateVO">
		UPDATE EDU_CRTF_TB 
		SET USE_ST = '1', DEL_ST = '0' ,UPD_DT=NOW() 
		WHERE 1=1 
			AND CRTF_SN = #CRTF_SN# 
			AND MBR_ID = #MBR_ID#
			AND CRS_SN = #CRS_SN#
			AND HMBR_SN = #HMBR_SN#
	</update>
	<update id="set_edu_certificate_mod_use_lock" parameterClass="eduCertificateVO">
		UPDATE EDU_CRTF_TB 
		SET USE_ST = '0' ,UPD_DT=NOW() 
		WHERE 1=1 
			AND CRTF_SN = #CRTF_SN# 
			AND MBR_ID = #MBR_ID#
			AND CRS_SN = #CRS_SN#
			AND HMBR_SN = #HMBR_SN#
	</update>
	<insert id="set_edu_certificate_reg" parameterClass="eduCertificateVO">
			INSERT INTO EDU_CRTF_TB
			(
				CRTF_CD,
				CRS_SN,
				HMBR_SN,
				MBR_ID,
				CRTF_FILE_SN,	
				CRTF_HTML_DATA,			
				REG_DT,
				UPD_DT,
				REG_MBR_ID,
				UPD_MBR_ID
			) VALUES (	
				#CRTF_CD#,
				#CRS_SN#,
				#HMBR_SN#,
				#MBR_ID#,
				#CRTF_FILE_SN#,	
				#CRTF_HTML_DATA#,
				NOW(),
				NOW(),
				#REG_MBR_ID#,
				#UPD_MBR_ID#
			)
			<!-- //다량 정보 등록시 오류 뿜
		<selectKey keyProperty="CRTF_SN" resultClass="String">
        SELECT LAST_INSERT_ID()
   		</selectKey>
   		 -->
	</insert>
	<insert id="set_edu_certificate_issue_record_dtl_reg" parameterClass="eduCertificateVO">
			INSERT INTO EDU_CRTF_DTL_TB
			(
				CRTF_SN,
				CRTF_CD,
				CRS_SN,
				HMBR_SN,
				MBR_ID,
				<isNotEmpty property="CRTF_TYPE_ST">		    	
					CRTF_TYPE_ST,
				</isNotEmpty>	
				<isNotEmpty property="CRTF_CMPLT_ST">		    	
					CRTF_CMPLT_ST,
				</isNotEmpty>	
				<isNotEmpty property="USE_ST">		    	
					USE_ST,
				</isNotEmpty>			
				REG_DT,
				UPD_DT,
				REG_MBR_ID,
				UPD_MBR_ID
			) VALUES (	
				#CRTF_SN#,
				#CRTF_CD#,
				#CRS_SN#,
				#HMBR_SN#,
				#MBR_ID#,	
				<isNotEmpty property="CRTF_TYPE_ST">		    	
					#CRTF_TYPE_ST#,
				</isNotEmpty>	
				<isNotEmpty property="CRTF_CMPLT_ST">		    	
					#CRTF_CMPLT_ST#,
				</isNotEmpty>
				<isNotEmpty property="USE_ST">		    	
					#USE_ST#,
				</isNotEmpty>	
				NOW(),
				NOW(),
				#REG_MBR_ID#,
				#UPD_MBR_ID#
			)
			<!-- <isNotEqual property="isNotReturnId" compareValue="true">  
	        SELECT LAST_INSERT_ID()
	        </isNotEqual>	 -->			
	</insert>
	<update id="set_edu_certificate_issue_record_dtl_cmplt" parameterClass="eduCertificateVO">
		UPDATE EDU_CRTF_DTL_TB 
		SET CRTF_CMPLT_ST = '1' ,UPD_DT=NOW() 
		WHERE 1=1 
			AND CRTF_SN = #CRTF_SN#
			<isNotEmpty property="MBR_ID">	
			AND MBR_ID = #MBR_ID#
			</isNotEmpty>
			AND CRS_SN = #CRS_SN#
			AND HMBR_SN = #HMBR_SN#
			AND CRTF_DTL_SN = #CRTF_DTL_SN#
	</update>
	
	<!-- api query -->
	<select id="get_edu_certificate_api_list" parameterClass="eduCertificateVO" resultClass="eduCertificateVO">
	SELECT 
		hs.mbr_id			MBR_ID, 
		cu.crs_nm 			CRS_NM,
		hs.LRNNG_CMPLT_ST	LRNNG_CMPLT_ST,
		hs.CRS_SN			CRS_SN, 
		hs.HMBR_SN			HMBR_SN
	FROM 
		edu_mbr_hstry_tb hs
	JOIN 
		edu_curriculum_tb cu
	ON 
		hs.CRS_SN = cu.CRS_SN
	WHERE 
		hs.mbr_id = #MBR_ID#
	</select>
</sqlMap>
